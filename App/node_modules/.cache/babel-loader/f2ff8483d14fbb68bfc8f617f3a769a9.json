{"ast":null,"code":"import _regeneratorRuntime from \"/Users/rahulginodia/Desktop/App/App/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/rahulginodia/Desktop/App/App/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/Users/rahulginodia/Desktop/App/App/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _possibleConstructorReturn from \"/Users/rahulginodia/Desktop/App/App/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/rahulginodia/Desktop/App/App/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _createClass from \"/Users/rahulginodia/Desktop/App/App/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/Users/rahulginodia/Desktop/App/App/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/rahulginodia/Desktop/App/App/src/components/App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport Navbar from './Navbar';\nimport Web3 from 'web3';\nimport Tether from '../truffle_abis/Tether.json';\n\nvar App = /*#__PURE__*/function (_Component) {\n  _inherits(App, _Component);\n\n  _createClass(App, [{\n    key: \"UNSAFE_componentWillMount\",\n    value: function () {\n      var _UNSAFE_componentWillMount = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return this.loadWeb3();\n\n              case 2:\n                _context.next = 4;\n                return this.loadBlockchainData();\n\n              case 4:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function UNSAFE_componentWillMount() {\n        return _UNSAFE_componentWillMount.apply(this, arguments);\n      }\n\n      return UNSAFE_componentWillMount;\n    }()\n  }, {\n    key: \"loadWeb3\",\n    value: function () {\n      var _loadWeb = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                if (!window.ethereum) {\n                  _context2.next = 6;\n                  break;\n                }\n\n                window.web3 = new Web3(window.ethereum);\n                _context2.next = 4;\n                return window.ethereum.enable();\n\n              case 4:\n                _context2.next = 7;\n                break;\n\n              case 6:\n                if (window.web3) {\n                  window.web3 = new Web3(window.web3.currentProvider);\n                } else {\n                  window.alert('No ethereum brownser detected! You can check out your Metamask');\n                }\n\n              case 7:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }));\n\n      function loadWeb3() {\n        return _loadWeb.apply(this, arguments);\n      }\n\n      return loadWeb3;\n    }()\n  }, {\n    key: \"loadBlockchainData\",\n    value: function () {\n      var _loadBlockchainData = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3() {\n        var web3, account, networkId, tetherData, tether, tetherBalance;\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                web3 = window.web3;\n                _context3.next = 3;\n                return web3.eth.getAccounts();\n\n              case 3:\n                account = _context3.sent;\n                this.setState({\n                  account: account[0]\n                });\n                _context3.next = 7;\n                return web3.eth.net.getId();\n\n              case 7:\n                networkId = _context3.sent;\n                console.log(account[0]); // load Tether contract \n\n                tetherData = Tether.networks[networkId];\n\n                if (!tetherData) {\n                  _context3.next = 20;\n                  break;\n                }\n\n                tether = new web3.eth.Contract(Tether.abi, tetherData.address);\n                this.setState({\n                  tether: tether\n                });\n                _context3.next = 15;\n                return tether.methods.balanceOf(this.state.account).call();\n\n              case 15:\n                tetherBalance = _context3.sent;\n                this.setState({\n                  tetherBalance: tetherBalance.toString()\n                });\n                console.log({\n                  balance: tetherBalance\n                });\n                _context3.next = 21;\n                break;\n\n              case 20:\n                window.alert('Tether contract not deployed becuase no network detected');\n\n              case 21:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n\n      function loadBlockchainData() {\n        return _loadBlockchainData.apply(this, arguments);\n      }\n\n      return loadBlockchainData;\n    }()\n  }]);\n\n  function App(props) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this, props));\n    _this.state = {\n      account: '0x0',\n      tether: {},\n      rwd: {},\n      decentralBank: {},\n      tetherBalance: '0',\n      rwdBalance: '0',\n      stakingBalance: '0',\n      loading: true\n    };\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"render\",\n    value: function render() {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Navbar, {\n        account: this.state.account,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 17\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"text-center\",\n        style: {\n          color: 'green',\n          fontSize: '120px'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"h1\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 21\n        }\n      })));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["/Users/rahulginodia/Desktop/App/App/src/components/App.js"],"names":["React","Component","Navbar","Web3","Tether","App","loadWeb3","loadBlockchainData","window","ethereum","web3","enable","currentProvider","alert","eth","getAccounts","account","setState","net","getId","networkId","console","log","tetherData","networks","tether","Contract","abi","address","methods","balanceOf","state","call","tetherBalance","toString","balance","props","rwd","decentralBank","rwdBalance","stakingBalance","loading","color","fontSize"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport './App.css';\nimport Navbar from './Navbar';\nimport Web3 from 'web3'\nimport Tether from '../truffle_abis/Tether.json'\n\n\nclass App extends Component {\n\n    async UNSAFE_componentWillMount() {\n        await this.loadWeb3()\n        await this.loadBlockchainData()\n    }\n\n    async loadWeb3() {\n        if(window.ethereum) {\n            window.web3 = new Web3(window.ethereum)\n            await window.ethereum.enable()\n        }\n        else if(window.web3){\n            window.web3 = new Web3(window.web3.currentProvider)\n        }\n        else{\n            window.alert('No ethereum brownser detected! You can check out your Metamask')\n        }\n    }\n\n    async loadBlockchainData(){\n        const web3 = window.web3\n        const account = await web3.eth.getAccounts()\n        this.setState({account: account[0]})\n        const networkId = await web3.eth.net.getId()\n        console.log(account[0])\n\n        // load Tether contract \n        const tetherData = Tether.networks[networkId]\n        if(tetherData){\n            const tether = new web3.eth.Contract(Tether.abi, tetherData.address)\n            this.setState({tether: tether})\n            let tetherBalance = await tether.methods.balanceOf(this.state.account).call()\n            this.setState({tetherBalance: tetherBalance.toString()})\n            console.log({balance: tetherBalance})\n        }\n        else{\n            window.alert('Tether contract not deployed becuase no network detected')\n        }\n\n\n    }\n\n    constructor(props) {\n        super(props)\n        this.state = {\n            account: '0x0',\n            tether: {},\n            rwd: {},\n            decentralBank: {},\n            tetherBalance: '0',\n            rwdBalance: '0',\n            stakingBalance: '0',\n            loading: true \n        }\n    }\n\n    render() {\n        return (\n            <div>\n                <Navbar account={this.state.account}/>\n                <div className = 'text-center' style={{color:'green',\n                fontSize:'120px'}}>\n                    <h1></h1>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}